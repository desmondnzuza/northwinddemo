/*
 * angular-ui-bootstrap
 * http://angular-ui.github.io/bootstrap/

 * Version: 0.14.3 - 2015-10-23
 * License: MIT
 */
angular.module("ui.bootstrap", ["ui.bootstrap.tabs", "ui.bootstrap.modal", "ui.bootstrap.stackedMap"]), angular.module("ui.bootstrap.tabs", []).controller("UibTabsetController", ["$scope", function (e) { var t = this, a = t.tabs = e.tabs = []; t.select = function (e) { angular.forEach(a, function (t) { t.active && t !== e && (t.active = !1, t.onDeselect(), e.selectCalled = !1) }), e.active = !0, e.selectCalled || (e.onSelect(), e.selectCalled = !0) }, t.addTab = function (e) { a.push(e), 1 === a.length && e.active !== !1 ? e.active = !0 : e.active ? t.select(e) : e.active = !1 }, t.removeTab = function (e) { var i = a.indexOf(e); if (e.active && a.length > 1 && !n) { var r = i == a.length - 1 ? i - 1 : i + 1; t.select(a[r]) } a.splice(i, 1) }; var n; e.$on("$destroy", function () { n = !0 }) }]).directive("uibTabset", function () { return { restrict: "EA", transclude: !0, replace: !0, scope: { type: "@" }, controller: "UibTabsetController", templateUrl: "template/tabs/tabset.html", link: function (e, t, a) { e.vertical = angular.isDefined(a.vertical) ? e.$parent.$eval(a.vertical) : !1, e.justified = angular.isDefined(a.justified) ? e.$parent.$eval(a.justified) : !1 } } }).directive("uibTab", ["$parse", function (e) { return { require: "^uibTabset", restrict: "EA", replace: !0, templateUrl: "template/tabs/tab.html", transclude: !0, scope: { active: "=?", heading: "@", onSelect: "&select", onDeselect: "&deselect" }, controller: function () { }, link: function (t, a, n, i, r) { t.$watch("active", function (e) { e && i.select(t) }), t.disabled = !1, n.disable && t.$parent.$watch(e(n.disable), function (e) { t.disabled = !!e }), t.select = function () { t.disabled || (t.active = !0) }, i.addTab(t), t.$on("$destroy", function () { i.removeTab(t) }), t.$transcludeFn = r } } }]).directive("uibTabHeadingTransclude", function () { return { restrict: "A", require: ["?^uibTab", "?^tab"], link: function (e, t) { e.$watch("headingElement", function (e) { e && (t.html(""), t.append(e)) }) } } }).directive("uibTabContentTransclude", function () { function e(e) { return e.tagName && (e.hasAttribute("tab-heading") || e.hasAttribute("data-tab-heading") || e.hasAttribute("x-tab-heading") || e.hasAttribute("uib-tab-heading") || e.hasAttribute("data-uib-tab-heading") || e.hasAttribute("x-uib-tab-heading") || "tab-heading" === e.tagName.toLowerCase() || "data-tab-heading" === e.tagName.toLowerCase() || "x-tab-heading" === e.tagName.toLowerCase() || "uib-tab-heading" === e.tagName.toLowerCase() || "data-uib-tab-heading" === e.tagName.toLowerCase() || "x-uib-tab-heading" === e.tagName.toLowerCase()) } return { restrict: "A", require: ["?^uibTabset", "?^tabset"], link: function (t, a, n) { var i = t.$eval(n.uibTabContentTransclude); i.$transcludeFn(i.$parent, function (t) { angular.forEach(t, function (t) { e(t) ? i.headingElement = t : a.append(t) }) }) } } }), angular.module("ui.bootstrap.tabs").value("$tabsSuppressWarning", !1).controller("TabsetController", ["$scope", "$controller", "$log", "$tabsSuppressWarning", function (e, t, a, n) { n || a.warn("TabsetController is now deprecated. Use UibTabsetController instead."), angular.extend(this, t("UibTabsetController", { $scope: e })) }]).directive("tabset", ["$log", "$tabsSuppressWarning", function (e, t) { return { restrict: "EA", transclude: !0, replace: !0, scope: { type: "@" }, controller: "TabsetController", templateUrl: "template/tabs/tabset.html", link: function (a, n, i) { t || e.warn("tabset is now deprecated. Use uib-tabset instead."), a.vertical = angular.isDefined(i.vertical) ? a.$parent.$eval(i.vertical) : !1, a.justified = angular.isDefined(i.justified) ? a.$parent.$eval(i.justified) : !1 } } }]).directive("tab", ["$parse", "$log", "$tabsSuppressWarning", function (e, t, a) { return { require: "^tabset", restrict: "EA", replace: !0, templateUrl: "template/tabs/tab.html", transclude: !0, scope: { active: "=?", heading: "@", onSelect: "&select", onDeselect: "&deselect" }, controller: function () { }, link: function (n, i, r, s, l) { a || t.warn("tab is now deprecated. Use uib-tab instead."), n.$watch("active", function (e) { e && s.select(n) }), n.disabled = !1, r.disable && n.$parent.$watch(e(r.disable), function (e) { n.disabled = !!e }), n.select = function () { n.disabled || (n.active = !0) }, s.addTab(n), n.$on("$destroy", function () { s.removeTab(n) }), n.$transcludeFn = l } } }]).directive("tabHeadingTransclude", ["$log", "$tabsSuppressWarning", function (e, t) { return { restrict: "A", require: "^tab", link: function (a, n) { t || e.warn("tab-heading-transclude is now deprecated. Use uib-tab-heading-transclude instead."), a.$watch("headingElement", function (e) { e && (n.html(""), n.append(e)) }) } } }]).directive("tabContentTransclude", ["$log", "$tabsSuppressWarning", function (e, t) { function a(e) { return e.tagName && (e.hasAttribute("tab-heading") || e.hasAttribute("data-tab-heading") || e.hasAttribute("x-tab-heading") || "tab-heading" === e.tagName.toLowerCase() || "data-tab-heading" === e.tagName.toLowerCase() || "x-tab-heading" === e.tagName.toLowerCase()) } return { restrict: "A", require: "^tabset", link: function (n, i, r) { t || e.warn("tab-content-transclude is now deprecated. Use uib-tab-content-transclude instead."); var s = n.$eval(r.tabContentTransclude); s.$transcludeFn(s.$parent, function (e) { angular.forEach(e, function (e) { a(e) ? s.headingElement = e : i.append(e) }) }) } } }]), angular.module("ui.bootstrap.modal", ["ui.bootstrap.stackedMap"]).factory("$$multiMap", function () { return { createNew: function () { var e = {}; return { entries: function () { return Object.keys(e).map(function (t) { return { key: t, value: e[t] } }) }, get: function (t) { return e[t] }, hasKey: function (t) { return !!e[t] }, keys: function () { return Object.keys(e) }, put: function (t, a) { e[t] || (e[t] = []), e[t].push(a) }, remove: function (t, a) { var n = e[t]; if (n) { var i = n.indexOf(a); -1 !== i && n.splice(i, 1), n.length || delete e[t] } } } } } }).directive("uibModalBackdrop", ["$animate", "$injector", "$uibModalStack", function (e, t, a) { function n(t, n, r) { n.addClass("modal-backdrop"), r.modalInClass && (i ? i(n, { addClass: r.modalInClass }).start() : e.addClass(n, r.modalInClass), t.$on(a.NOW_CLOSING_EVENT, function (t, a) { var s = a(); i ? i(n, { removeClass: r.modalInClass }).start().then(s) : e.removeClass(n, r.modalInClass).then(s) })) } var i = null; return t.has("$animateCss") && (i = t.get("$animateCss")), { replace: !0, templateUrl: "template/modal/backdrop.html", compile: function (e, t) { return e.addClass(t.backdropClass), n } } }]).directive("uibModalWindow", ["$uibModalStack", "$q", "$animate", "$injector", function (e, t, a, n) { var i = null; return n.has("$animateCss") && (i = n.get("$animateCss")), { scope: { index: "@" }, replace: !0, transclude: !0, templateUrl: function (e, t) { return t.templateUrl || "template/modal/window.html" }, link: function (n, r, s) { r.addClass(s.windowClass || ""), r.addClass(s.windowTopClass || ""), n.size = s.size, n.close = function (t) { var a = e.getTop(); a && a.value.backdrop && "static" !== a.value.backdrop && t.target === t.currentTarget && (t.preventDefault(), t.stopPropagation(), e.dismiss(a.key, "backdrop click")) }, r.on("click", n.close), n.$isRendered = !0; var l = t.defer(); s.$observe("modalRender", function (e) { "true" == e && l.resolve() }), l.promise.then(function () { var l = null; s.modalInClass && (l = i ? i(r, { addClass: s.modalInClass }).start() : a.addClass(r, s.modalInClass), n.$on(e.NOW_CLOSING_EVENT, function (e, t) { var n = t(); i ? i(r, { removeClass: s.modalInClass }).start().then(n) : a.removeClass(r, s.modalInClass).then(n) })), t.when(l).then(function () { var e = r[0].querySelector("[autofocus]"); e ? e.focus() : r[0].focus() }); var o = e.getTop(); o && e.modalRendered(o.key) }) } } }]).directive("uibModalAnimationClass", function () { return { compile: function (e, t) { t.modalAnimation && e.addClass(t.uibModalAnimationClass) } } }).directive("uibModalTransclude", function () { return { link: function (e, t, a, n, i) { i(e.$parent, function (e) { t.empty(), t.append(e) }) } } }).factory("$uibModalStack", ["$animate", "$timeout", "$document", "$compile", "$rootScope", "$q", "$injector", "$$multiMap", "$$stackedMap", function (e, t, a, n, i, r, s, l, o) { function c() { for (var e = -1, t = C.keys(), a = 0; a < t.length; a++) C.get(t[a]).value.backdrop && (e = a); return e } function d(e, t) { var n = a.find("body").eq(0), i = C.get(e).value; C.remove(e), p(i.modalDomEl, i.modalScope, function () { var t = i.openedClass || $; w.remove(t, e), n.toggleClass(t, w.hasKey(t)), u(!0) }), b(), t && t.focus ? t.focus() : n.focus() } function u(e) { var t; C.length() > 0 && (t = C.top().value, t.modalDomEl.toggleClass(t.windowTopClass || "", e)) } function b() { if (g && -1 == c()) { var e = v; p(g, v, function () { e = null }), g = void 0, v = void 0 } } function p(t, a, n) { function i() { i.done || (i.done = !0, m ? m(t, { event: "leave" }).start().then(function () { t.remove() }) : e.leave(t), a.$destroy(), n && n()) } var s, l = null, o = function () { return s || (s = r.defer(), l = s.promise), function () { s.resolve() } }; return a.$broadcast(T.NOW_CLOSING_EVENT, o), r.when(l).then(i) } function f(e, t, a) { return !e.value.modalScope.$broadcast("modal.closing", t, a).defaultPrevented } var m = null; s.has("$animateCss") && (m = s.get("$animateCss")); var g, v, h, $ = "modal-open", C = o.createNew(), w = l.createNew(), T = { NOW_CLOSING_EVENT: "modal.stack.now-closing" }, k = 0, A = "a[href], area[href], input:not([disabled]), button:not([disabled]),select:not([disabled]), textarea:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable=true]"; return i.$watch(c, function (e) { v && (v.index = e) }), a.bind("keydown", function (e) { if (e.isDefaultPrevented()) return e; var t = C.top(); if (t && t.value.keyboard) switch (e.which) { case 27: e.preventDefault(), i.$apply(function () { T.dismiss(t.key, "escape key press") }); break; case 9: T.loadFocusElementList(t); var a = !1; e.shiftKey ? T.isFocusInFirstItem(e) && (a = T.focusLastFocusableElement()) : T.isFocusInLastItem(e) && (a = T.focusFirstFocusableElement()), a && (e.preventDefault(), e.stopPropagation()) } }), T.open = function (e, t) { var r = a[0].activeElement, s = t.openedClass || $; u(!1), C.add(e, { deferred: t.deferred, renderDeferred: t.renderDeferred, modalScope: t.scope, backdrop: t.backdrop, keyboard: t.keyboard, openedClass: t.openedClass, windowTopClass: t.windowTopClass }), w.put(s, e); var l = a.find("body").eq(0), o = c(); if (o >= 0 && !g) { v = i.$new(!0), v.index = o; var d = angular.element('<div uib-modal-backdrop="modal-backdrop"></div>'); d.attr("backdrop-class", t.backdropClass), t.animation && d.attr("modal-animation", "true"), g = n(d)(v), l.append(g) } var b = angular.element('<div uib-modal-window="modal-window"></div>'); b.attr({ "template-url": t.windowTemplateUrl, "window-class": t.windowClass, "window-top-class": t.windowTopClass, size: t.size, index: C.length() - 1, animate: "animate" }).html(t.content), t.animation && b.attr("modal-animation", "true"); var p = n(b)(t.scope); C.top().value.modalDomEl = p, C.top().value.modalOpener = r, l.append(p), l.addClass(s), T.clearFocusListCache() }, T.close = function (e, t) { var a = C.get(e); return a && f(a, t, !0) ? (a.value.modalScope.$$uibDestructionScheduled = !0, a.value.deferred.resolve(t), d(e, a.value.modalOpener), !0) : !a }, T.dismiss = function (e, t) { var a = C.get(e); return a && f(a, t, !1) ? (a.value.modalScope.$$uibDestructionScheduled = !0, a.value.deferred.reject(t), d(e, a.value.modalOpener), !0) : !a }, T.dismissAll = function (e) { for (var t = this.getTop() ; t && this.dismiss(t.key, e) ;) t = this.getTop() }, T.getTop = function () { return C.top() }, T.modalRendered = function (e) { var t = C.get(e); t && t.value.renderDeferred.resolve() }, T.focusFirstFocusableElement = function () { return h.length > 0 ? (h[0].focus(), !0) : !1 }, T.focusLastFocusableElement = function () { return h.length > 0 ? (h[h.length - 1].focus(), !0) : !1 }, T.isFocusInFirstItem = function (e) { return h.length > 0 ? (e.target || e.srcElement) == h[0] : !1 }, T.isFocusInLastItem = function (e) { return h.length > 0 ? (e.target || e.srcElement) == h[h.length - 1] : !1 }, T.clearFocusListCache = function () { h = [], k = 0 }, T.loadFocusElementList = function (e) { if ((void 0 === h || !h.length) && e) { var t = e.value.modalDomEl; t && t.length && (h = t[0].querySelectorAll(A)) } }, T }]).provider("$uibModal", function () { var e = { options: { animation: !0, backdrop: !0, keyboard: !0 }, $get: ["$injector", "$rootScope", "$q", "$templateRequest", "$controller", "$uibModalStack", "$modalSuppressWarning", "$log", function (t, a, n, i, r, s, l, o) { function c(e) { return e.template ? n.when(e.template) : i(angular.isFunction(e.templateUrl) ? e.templateUrl() : e.templateUrl) } function d(e) { var a = []; return angular.forEach(e, function (e) { a.push(angular.isFunction(e) || angular.isArray(e) ? n.when(t.invoke(e)) : angular.isString(e) ? n.when(t.get(e)) : n.when(e)) }), a } var u = {}, b = null; return u.getPromiseChain = function () { return b }, u.open = function (t) { function i() { return v } var u = n.defer(), p = n.defer(), f = n.defer(), m = { result: u.promise, opened: p.promise, rendered: f.promise, close: function (e) { return s.close(m, e) }, dismiss: function (e) { return s.dismiss(m, e) } }; if (t = angular.extend({}, e.options, t), t.resolve = t.resolve || {}, !t.template && !t.templateUrl) throw new Error("One of template or templateUrl options is required."); var g, v = n.all([c(t)].concat(d(t.resolve))); return g = b = n.all([b]).then(i, i).then(function (e) { var n = (t.scope || a).$new(); n.$close = m.close, n.$dismiss = m.dismiss, n.$on("$destroy", function () { n.$$uibDestructionScheduled || n.$dismiss("$uibUnscheduledDestruction") }); var i, c = {}, d = 1; t.controller && (c.$scope = n, c.$uibModalInstance = m, Object.defineProperty(c, "$modalInstance", { get: function () { return l || o.warn("$modalInstance is now deprecated. Use $uibModalInstance instead."), m } }), angular.forEach(t.resolve, function (t, a) { c[a] = e[d++] }), i = r(t.controller, c), t.controllerAs && (t.bindToController && angular.extend(i, n), n[t.controllerAs] = i)), s.open(m, { scope: n, deferred: u, renderDeferred: f, content: e[0], animation: t.animation, backdrop: t.backdrop, keyboard: t.keyboard, backdropClass: t.backdropClass, windowTopClass: t.windowTopClass, windowClass: t.windowClass, windowTemplateUrl: t.windowTemplateUrl, size: t.size, openedClass: t.openedClass }), p.resolve(!0) }, function (e) { p.reject(e), u.reject(e) }).finally(function () { b === g && (b = null) }), m }, u }] }; return e }), angular.module("ui.bootstrap.modal").value("$modalSuppressWarning", !1).directive("modalBackdrop", ["$animate", "$injector", "$modalStack", "$log", "$modalSuppressWarning", function (e, t, a, n, i) { function r(t, r, l) { i || n.warn("modal-backdrop is now deprecated. Use uib-modal-backdrop instead."), r.addClass("modal-backdrop"), l.modalInClass && (s ? s(r, { addClass: l.modalInClass }).start() : e.addClass(r, l.modalInClass), t.$on(a.NOW_CLOSING_EVENT, function (t, a) { var n = a(); s ? s(r, { removeClass: l.modalInClass }).start().then(n) : e.removeClass(r, l.modalInClass).then(n) })) } var s = null; return t.has("$animateCss") && (s = t.get("$animateCss")), { replace: !0, templateUrl: "template/modal/backdrop.html", compile: function (e, t) { return e.addClass(t.backdropClass), r } } }]).directive("modalWindow", ["$modalStack", "$q", "$animate", "$injector", "$log", "$modalSuppressWarning", function (e, t, a, n, i, r) { var s = null; return n.has("$animateCss") && (s = n.get("$animateCss")), { scope: { index: "@" }, replace: !0, transclude: !0, templateUrl: function (e, t) { return t.templateUrl || "template/modal/window.html" }, link: function (n, l, o) { r || i.warn("modal-window is now deprecated. Use uib-modal-window instead."), l.addClass(o.windowClass || ""), l.addClass(o.windowTopClass || ""), n.size = o.size, n.close = function (t) { var a = e.getTop(); a && a.value.backdrop && "static" !== a.value.backdrop && t.target === t.currentTarget && (t.preventDefault(), t.stopPropagation(), e.dismiss(a.key, "backdrop click")) }, l.on("click", n.close), n.$isRendered = !0; var c = t.defer(); o.$observe("modalRender", function (e) { "true" == e && c.resolve() }), c.promise.then(function () { var i = null; o.modalInClass && (i = s ? s(l, { addClass: o.modalInClass }).start() : a.addClass(l, o.modalInClass), n.$on(e.NOW_CLOSING_EVENT, function (e, t) { var n = t(); s ? s(l, { removeClass: o.modalInClass }).start().then(n) : a.removeClass(l, o.modalInClass).then(n) })), t.when(i).then(function () { var e = l[0].querySelector("[autofocus]"); e ? e.focus() : l[0].focus() }); var r = e.getTop(); r && e.modalRendered(r.key) }) } } }]).directive("modalAnimationClass", ["$log", "$modalSuppressWarning", function (e, t) { return { compile: function (a, n) { t || e.warn("modal-animation-class is now deprecated. Use uib-modal-animation-class instead."), n.modalAnimation && a.addClass(n.modalAnimationClass) } } }]).directive("modalTransclude", ["$log", "$modalSuppressWarning", function (e, t) { return { link: function (a, n, i, r, s) { t || e.warn("modal-transclude is now deprecated. Use uib-modal-transclude instead."), s(a.$parent, function (e) { n.empty(), n.append(e) }) } } }]).service("$modalStack", ["$animate", "$timeout", "$document", "$compile", "$rootScope", "$q", "$injector", "$$multiMap", "$$stackedMap", "$uibModalStack", "$log", "$modalSuppressWarning", function (e, t, a, n, i, r, s, l, o, c, d, u) { u || d.warn("$modalStack is now deprecated. Use $uibModalStack instead."), angular.extend(this, c) }]).provider("$modal", ["$uibModalProvider", function (e) { angular.extend(this, e), this.$get = ["$injector", "$log", "$modalSuppressWarning", function (t, a, n) { return n || a.warn("$modal is now deprecated. Use $uibModal instead."), t.invoke(e.$get) }] }]), angular.module("ui.bootstrap.stackedMap", []).factory("$$stackedMap", function () { return { createNew: function () { var e = []; return { add: function (t, a) { e.push({ key: t, value: a }) }, get: function (t) { for (var a = 0; a < e.length; a++) if (t == e[a].key) return e[a] }, keys: function () { for (var t = [], a = 0; a < e.length; a++) t.push(e[a].key); return t }, top: function () { return e[e.length - 1] }, remove: function (t) { for (var a = -1, n = 0; n < e.length; n++) if (t == e[n].key) { a = n; break } return e.splice(a, 1)[0] }, removeTop: function () { return e.splice(e.length - 1, 1)[0] }, length: function () { return e.length } } } } });